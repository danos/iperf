Description: fix typos
 recieve -> receive
 maintainence -> maintenance
 ouput -> output
 (un)desireable -> desirable
Author: Roberto Lumbreras <rover@debian.org>

Index: iperf-2.0.13+dfsg1/man/iperf.1
===================================================================
--- iperf-2.0.13+dfsg1.orig/man/iperf.1	2019-01-23 19:21:53.744659225 +0100
+++ iperf-2.0.13+dfsg1/man/iperf.1	2019-01-23 19:21:53.736659166 +0100
@@ -161,7 +161,7 @@
 input the data to be transmitted from stdin
 .TP
 .BR -L ", " --listenport " \fIn\fR"
-port to recieve bidirectional tests back on
+port to receive bidirectional tests back on
 .TP
 .BR -P ", " --parallel " \fIn\fR"
 number of parallel client threads to run
@@ -525,7 +525,7 @@
 IP address as their source. The bind() does not control anything about
 the routing of transmitted packets. So, for example, if the IP address
 of eth0 is used for -B and the routing table for the destination IP
-address (per -c) resolves the ouput interface to be eth1, then the
+address (per -c) resolves the output interface to be eth1, then the
 host will send the packet out device eth1 with the source IP address
 of eth0.  To affect the physical output interface (e.g. dual homed
 systems) the host's routing table(s) need to be configured,
@@ -541,8 +541,8 @@
 convenience function defined as throughput/delay.  For TCP, the delay
 is the sampled RTT times.  For UDP the delay is the end/end latency.
 Don't confuse this with the physics definition of power (delta
-energy/delta time) but more of a measure of a desireable property
-divided by an undesireable property.  Also note, one must use -i
+energy/delta time) but more of a measure of a desirable property
+divided by an undesirable property.  Also note, one must use -i
 interval with TCP to get this as that's what sets the RTT sampling
 rate.  The metric is scaled to assist with human readability.  (Note:
 if this metric goes beyond the experimental state we'll consider a
@@ -553,7 +553,7 @@
 See https://sourceforge.net/p/iperf2/tickets/
 .SH AUTHORS
 Iperf2, based from iperf (originally written by Mark Gates and Alex
-Warshavsky), has a goal of maintainence with some feature enhancement.
+Warshavsky), has a goal of maintenance with some feature enhancement.
 Other contributions from Ajay Tirumala, Jim Ferguson, Jon Dugan <jdugan at x1024 dot net>,
 Feng Qin,
 Kevin Gibbs,
Index: iperf-2.0.13+dfsg1/src/Client.cpp
===================================================================
--- iperf-2.0.13+dfsg1.orig/src/Client.cpp	2019-01-23 19:21:53.744659225 +0100
+++ iperf-2.0.13+dfsg1/src/Client.cpp	2019-01-23 19:21:53.736659166 +0100
@@ -1045,7 +1045,7 @@
 		if (ntohl(ack.typelen.type) == CLIENTHDRACK && ntohl(ack.typelen.length) == sizeof(client_hdr_ack)) {
 		    reporter_peerversion (mSettings, ntohl(ack.version_u), ntohl(ack.version_l));
 		} else {
-		    sprintf(mSettings->peerversion, " (misformed server version)");
+		    sprintf(mSettings->peerversion, " (malformed server version)");
 		}
 	    } else {
 		WARN_errno(1, "recvack" );
